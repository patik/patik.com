# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Linting and Unit Tests

on:
  pull_request:
    types: [opened, reopened]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install
      - run: yarn build
      - run: yarn lint
      - run: yarn test:blog

    # steps:
    #   - name: Get yarn cache directory path
    #     id: yarn-cache-dir-path
    #     run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
    #   - uses: actions/cache@v3
    #     id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
    #     with:
    #       path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
    #       key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}
    #       restore-keys: |
    #         ${{ runner.os }}-nextjs-
    #   - uses: actions/checkout@v3
    #   - name: Use Node.js ${{ matrix.node-version }}
    #     uses: actions/setup-node@v3
    #     with:
    #       node-version: ${{ matrix.node-version }}
    #       cache: 'yarn'
    #   - run: yarn install
    #   - run: yarn copyimages
    #   - run: yarn next build
    #   - run: yarn next export
    #   - run: yarn lint
    #   - run: yarn test
    #   - run: yarn build
